.gitlab-registry-login: &docker-login
  docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

image: docker:latest

stages:
  - lint
  - build
  - debug
  - test
  - test-cleanup
  - publish

hadolint:
  stage: lint
  image: hadolint/hadolint:latest-debian
  script: hadolint
            --ignore DL3007
            --ignore DL3008
            --ignore SC2016
            Dockerfile
build:
  stage: build
  script:
    - *docker-login
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" . | tee docker-build-debug.out
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
  artifacts:
    paths:
      - docker-build-debug.out
    when: on_failure
    expire_in: 30 mins

debug-failed-build:
  stage: debug
  script:
    - *docker-login
    - DEBUG_LAYER=$(grep '\-\-\-> [0-9a-z]' docker-build-debug.out |tail -1| cut -b 7-)
    - docker tag "$DEBUG_LAYER" "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-failed"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-failed"
  when: on_failure
  dependencies:
    - build

test:ssh-port:
  stage: test
  variables:
    TEST_ARTIFACTS_ID: '01'
  script:
    - docker network create "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
    - docker run -d
        --name "target-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network-alias aci-target
        --privileged
        --tmpfs /run
        -v /sys/fs/cgroup:/sys/fs/cgroup:ro
        "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
    - sleep 10
    - docker run --rm
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        busybox:latest
        /bin/sh -c "echo exit | telnet aci-target 22"

test:base-playbook:
  stage: test
  variables:
    TEST_ARTIFACTS_ID: '02'
  script:
    - docker network create "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
    - docker run -d
        --name "target-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network-alias aci-target
        --privileged
        --tmpfs /run
        -v /sys/fs/cgroup:/sys/fs/cgroup:ro
        "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
    - docker run --rm
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        -e PLAYBOOKDIR=/ansibleci-base/examples/default
        thomass/ansibleci-base
        run-tests

test:custom-playbook:
  stage: test
  variables:
    TEST_ARTIFACTS_ID: '03'
  script:
    - docker network create "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
    - docker run -d
        --name "target-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --network-alias aci-target
        --privileged
         --security-opt seccomp=unconfined
        --tmpfs /run
        -v /sys/fs/cgroup:/sys/fs/cgroup:ro
        "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
    - docker container create
        --network "gitlab-ci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        --name "ansibleci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"
        -e PLAYBOOKDIR=/playbook/test
        thomass/ansibleci-base
        run-tests
    - docker cp "$CI_PROJECT_DIR" "ansibleci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}:/playbook"
    - docker start -a "ansibleci-${TEST_ARTIFACTS_ID}-${CI_PIPELINE_ID}"

test-cleanup:
  stage: test-cleanup
  script:
    - docker rm -vf "target-01-$CI_PIPELINE_ID"
    - docker rm -vf "target-02-$CI_PIPELINE_ID"
#    - docker rm -vf "target-03-$CI_PIPELINE_ID"
    - docker rm -vf "ansibleci-03-$CI_PIPELINE_ID"
    - docker network remove "gitlab-ci-01-$CI_PIPELINE_ID"
    - docker network remove "gitlab-ci-02-$CI_PIPELINE_ID"
    - docker network remove "gitlab-ci-03-$CI_PIPELINE_ID"
  when: always

dockerhub:
  stage: publish
  script:
    - if [ "$CI_COMMIT_REF_SLUG" == "master" ]; then IMAGE_TAG="latest"; else IMAGE_TAG="$CI_COMMIT_REF_SLUG"; fi
    - IMAGE_NAME="${GITLAB_SECRET_DOCKER_USER}/${CI_PROJECT_NAME}:${IMAGE_TAG}"
    - docker tag "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" "$IMAGE_NAME"
    - docker login -u "$GITLAB_SECRET_DOCKER_USER" -p "$GITLAB_SECRET_DOCKER_PASSWORD"
    - docker push "$IMAGE_NAME"
